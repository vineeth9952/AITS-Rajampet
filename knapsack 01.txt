#include <bits/stdc++.h>
using namespace std;

int knapsack(int weights[], int values[], int n, int W) 
{
    int dp[n+1][W+1];
    for(int i=0;i<=n;i++)
        for(int j=0;j<=W;j++)
            dp[i][j] = 0 ;
            
            
    for (int i = 1; i <= n; ++i) 
    {
        for (int j = 1; j <= W; ++j) 
        {
            if (weights[i - 1] <= j) 
            {
                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weights[i - 1]] + values[i - 1]);
            }
            else 
            {
                dp[i][j] = dp[i - 1][j];
            }
        }
    }
    return dp[n][W];
}

int main() 
{
    int T,n, w;
    cin>>T ;
    while(T--)
    {
        cin>>w>>n ;
        int values[n], weights[n];
        for(int i=0;i<n;i++)
        {
            cin>>weights[i]>>values[i];
        }
        cout<<knapsack(weights, values, n ,w)<<endl;
    }
    return 0;
}
