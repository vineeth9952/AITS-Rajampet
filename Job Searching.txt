#include <bits/stdc++.h>
using namespace std;

bool compare(const pair<string, pair<int, int>>& a, const pair<string, pair<int, int>>& b) 
{
    return a.second.second > b.second.second;
}

void jobSequencing(vector<pair<string, pair<int, int>>>& jobs) 
{
    sort(jobs.begin(), jobs.end(), compare);

    int n = jobs.size();
    vector<bool> slot(n, false);
    vector<string> result(n);
    int sum = 0 ;
    for (int i = 0; i < n; i++) 
    {
        
        for (int j = min(n, jobs[i].second.first) - 1; j >= 0; j--) 
        {
            // Free slot found
            if (!slot[j]) 
            {
                result[j] = jobs[i].first; 
                slot[j] = true; 
                sum += jobs[i].second.second;
                break;
            }
        }
    }

    cout << "Job sequence for maximum profit:\n";
    for (int i = 0; i < n; i++) 
    {
        if (slot[i]) 
        {
            cout << result[i] << " " ;
        }
    }
    cout << endl;
    cout << "Profit is " << sum;
}

int main() 
{

    vector<pair<string, pair<int, int>>> jobs = 
    {
        {"a", {2, 100}},
        {"b", {1, 19}},
        {"c", {2, 27}},
        {"d", {1, 25}},
        {"e", {3, 15}},
        {"f", {4, 25}},
        {"g", {5, 53}},
        {"h", {4, 43}},
        {"i", {1, 34}}
        
    };

    jobSequencing(jobs);

    return 0;
}
